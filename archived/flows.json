[
    {
        "id": "69238f4c.8e23f",
        "type": "tab",
        "label": "Weerstation-micropython",
        "disabled": false,
        "info": ""
    },
    {
        "id": "43f95fa6.1e9ed",
        "type": "tab",
        "label": "JSON_test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5ba46c1d.b961a4",
        "type": "tab",
        "label": "MaxInt_lichtkrant",
        "disabled": false,
        "info": ""
    },
    {
        "id": "855b7076.01ac4",
        "type": "tab",
        "label": "Octoprint op octopi1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "95a267b0.dfbf78",
        "type": "tab",
        "label": "p1mon",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a7951a73.242a18",
        "type": "tab",
        "label": "WLED",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eab7e4b1.f833c",
        "type": "tab",
        "label": "Homebridge",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5a52a983.5025e8",
        "type": "tab",
        "label": "deepsleep_hallo_wereld_20190123"
    },
    {
        "id": "a81c1cbe.ba134",
        "type": "tab",
        "label": "wemos_sn76489_mqqt_20181227"
    },
    {
        "id": "417eb1f6.8256b",
        "type": "tab",
        "label": "urbanlink.nl"
    },
    {
        "id": "c10edcb88cf529eb",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a9c62398303cd12b",
        "type": "tab",
        "label": "ESp32 sensore",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95126d70a8834898",
        "type": "tab",
        "label": "Pi Camera Stills to Dashboard",
        "disabled": false,
        "info": "ref--> https://flows.nodered.org/flow/2b6c2f0d7a316f1a6831782d33a0d40c\r\n",
        "env": []
    },
    {
        "id": "d7baa1bd346d78d0",
        "type": "tab",
        "label": "node-red-contrib-image-output",
        "disabled": false,
        "info": "ref --> https://flows.nodered.org/node/node-red-contrib-image-output\r\n",
        "env": []
    },
    {
        "id": "ef560dfa9aa5a337",
        "type": "tab",
        "label": "Telegram motivational quote",
        "disabled": false,
        "info": "ref --> https://flows.nodered.org/flow/642ee1a708d9cebeee964c7006e23020/in/RV7rLt9tjepZ\r\n",
        "env": []
    },
    {
        "id": "9cf3a6d.1104258",
        "type": "tab",
        "label": "Raspberry monitoring",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9eb1d4a0df15e20d",
        "type": "tab",
        "label": "Raspberry monitoring",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fb508433.7560a8",
        "type": "ui_group",
        "name": "p1mon",
        "tab": "7fcb832a.37aa3c",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "b74d5871.22be88",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "5c5d1421.257f6c",
        "type": "mqtt-broker",
        "name": "admin@dietpi",
        "broker": "dietpi",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7fcb832a.37aa3c",
        "type": "ui_tab",
        "name": "p1mon",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8bbab171.219ac",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "904aa569.f42e48",
        "type": "ui_group",
        "name": "Main Lamp",
        "tab": "2dc3649.7ab109c",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "68b9bc04.cb10d4",
        "type": "ui_group",
        "name": "Bench Light",
        "tab": "2dc3649.7ab109c",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "2dc3649.7ab109c",
        "type": "ui_tab",
        "name": "LAB",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "b74ac5c5.56ded8",
        "type": "ui_group",
        "name": "MiFlora",
        "tab": "53483d99.fbda24",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "3c072315.335ebc",
        "type": "ui_group",
        "name": "Report",
        "tab": "6facd1c.1baba3",
        "order": 2,
        "disp": true,
        "width": "18"
    },
    {
        "id": "c478907e.d3049",
        "type": "ui_group",
        "name": "Selection",
        "tab": "6facd1c.1baba3",
        "order": 1,
        "disp": true,
        "width": "5"
    },
    {
        "id": "53483d99.fbda24",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": "1"
    },
    {
        "id": "6facd1c.1baba3",
        "type": "ui_tab",
        "name": "Reports",
        "icon": "dashboard",
        "order": 9
    },
    {
        "id": "7eb5b27a.fe733c",
        "type": "ui_group",
        "name": "MiFlora",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "a9164fa0.137b5",
        "type": "ui_group",
        "name": "Report",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "18"
    },
    {
        "id": "6aa99c76.f6add4",
        "type": "ui_group",
        "name": "Selection",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "5"
    },
    {
        "id": "101d968b.b667e9",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.sav"
    },
    {
        "id": "a605c726.e2b368",
        "type": "mqtt-broker",
        "broker": "192.168.1.92",
        "port": "1883",
        "clientid": "ict-beheer",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "4a483c89.03dcd4",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "5b1e81cd.80a68",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "a6a3041b.8ef2e8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "admin@localhost",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "5b1e81cd.80a68",
        "type": "ui_tab",
        "name": "Het weer",
        "icon": "dashboard",
        "order": 6
    },
    {
        "id": "5ef39449.6c516c",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "8c33d897.72eff8",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "85448d3c.58094",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7003ac79.485954",
        "type": "mqtt-broker",
        "name": "michiele@pi4.local",
        "broker": "localhost",
        "port": "1883",
        "clientid": "michiele@pi4.local",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "2471f790.e8cf58",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "c41f7721.15ee78",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "6447b091.9bfcd",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "5ef027d9.c8f1e8",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "5d780da7.d9fc94",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "5d8f5b3f.4828a4",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "df83465e.4f4778",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "728d72b3.c270ac",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "47c154a4.a13efc",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "197bb2db.a860ed",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "3c05b909.8b7296",
        "type": "ui_group",
        "name": "Weerstation",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "f33d6222.e8b1c",
        "type": "sqlitedb",
        "db": "/home/pi/dbs/iot.db"
    },
    {
        "id": "445ae1eb.267eb",
        "type": "ui_group",
        "name": "One dimension Array",
        "tab": "72d639a7.f71688",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "72d639a7.f71688",
        "type": "ui_tab",
        "name": "Table Examples",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "3c4959d9.74d7c6",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "eae086f0.17bee8",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "630cdcd3.4ade44",
        "type": "ui_tab",
        "name": "HetWeerSQL",
        "icon": "dashboard",
        "order": 6
    },
    {
        "id": "9062393a.fc7528",
        "type": "ui_group",
        "name": "Histories",
        "tab": "630cdcd3.4ade44",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "299035ac.954eca",
        "type": "mqtt-broker",
        "broker": "oif-mqtt.urbanlink.nl",
        "port": "8020",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e20e344371a2a87b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.1.3",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3535c8c83f0da586",
        "type": "ui_group",
        "name": "Default",
        "tab": "eaae7c5232f2860e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "373fa459.54e07c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "weatherdata",
        "name": "Weather",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "5c9d6bcb2d0f88c0",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "weatherdata",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "eaae7c5232f2860e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c3394acacac5db6e",
        "type": "firebird-database",
        "host": "127.0.0.1",
        "port": "3050",
        "db": ""
    },
    {
        "id": "e57c1143.ae121",
        "type": "ttn app",
        "appId": "384976234897",
        "accessKey": "ttn-account-v2.PNVnl3M3kMF0LKgqgfHv3IIVn-UVJfmBvdWF4gDaZB4",
        "discovery": "discovery.thethingsnetwork.org:1900"
    },
    {
        "id": "c7a43587.2944e8",
        "type": "ui_group",
        "name": "Default",
        "tab": "fbd536a.22bf9c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fbd536a.22bf9c8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "cbe50c39.f38f1",
        "type": "ui_group",
        "name": "Quote",
        "tab": "27a5131.81170ec",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "27a5131.81170ec",
        "type": "ui_tab",
        "name": "Motivation",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "662164b904dfacb5",
        "type": "telegram bot",
        "botname": "motivational quote",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "ad4a1223.94ae8",
        "type": "ui_tab",
        "z": "9cf3a6d.1104258",
        "name": "Raspbery PI (Control Panel)",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9cb4bc4d.96552",
        "type": "ui_group",
        "name": "System",
        "tab": "ad4a1223.94ae8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dd70abe0.14cb38",
        "type": "ui_group",
        "name": "OS",
        "tab": "ad4a1223.94ae8",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "14bc5267.4d798e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "raspberry_do_gama_alive",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "Raspberry ativo",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "bc82ef1c680d36bd",
        "type": "ui_tab",
        "z": "9eb1d4a0df15e20d",
        "name": "Raspbery PI (Control Panel)",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9c5b957f.fdcba8",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "weestation/hallo",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "eb9d9210.304dc"
            ]
        ]
    },
    {
        "id": "eb9d9210.304dc",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 673.9999961853027,
        "y": 59.333322525024414,
        "wires": []
    },
    {
        "id": "c762c561.8290d8",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "Wemos reboot setup",
        "topic": "weatherStation/reboot/setup",
        "qos": "0",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "3f295a28.6d0cd6"
            ]
        ]
    },
    {
        "id": "3f295a28.6d0cd6",
        "type": "function",
        "z": "69238f4c.8e23f",
        "name": "setdeepSleepInterval 30minuten",
        "func": "var deepSleepInterval = 30*60;\n\nif(msg.topic == \"weatherStation/reboot/setup\")\n{\n    if(parseInt(msg.payload) == 1)\n    {\n        msg.payload = parseInt(deepSleepInterval);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 531.8333282470703,
        "y": 321.333345413208,
        "wires": [
            [
                "317b823c.f6816e",
                "104131d1.05643e"
            ]
        ]
    },
    {
        "id": "317b823c.f6816e",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 832.8333129882812,
        "y": 395.0000066757202,
        "wires": []
    },
    {
        "id": "787b60b3.0b0c3",
        "type": "inject",
        "z": "69238f4c.8e23f",
        "name": "inject deepSleepIntervalSekonden",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "weatherStation/ONTWAAK",
        "payload": "240",
        "payloadType": "str",
        "x": 210.8333282470703,
        "y": 176.6666488647461,
        "wires": [
            [
                "104131d1.05643e"
            ]
        ]
    },
    {
        "id": "8b761385.62351",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "halloWereld",
        "topic": "weatherStation/halloWereld",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 217.83331680297852,
        "y": 537.6667137145996,
        "wires": [
            [
                "e941fa34.b09f48"
            ]
        ]
    },
    {
        "id": "e941fa34.b09f48",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 535.8333129882812,
        "y": 512.0000104904175,
        "wires": []
    },
    {
        "id": "29d86698.b5a39a",
        "type": "inject",
        "z": "69238f4c.8e23f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "weatherStation/bmp1/debug",
        "payload": "1",
        "payloadType": "num",
        "x": 235.8332977294922,
        "y": 638.6666870117188,
        "wires": [
            [
                "e5343a0.3e2acc8"
            ]
        ]
    },
    {
        "id": "e5343a0.3e2acc8",
        "type": "mqtt out",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "weatherstation/bmp1/debug",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7003ac79.485954",
        "x": 707.833309173584,
        "y": 610.0000066757202,
        "wires": []
    },
    {
        "id": "b1ae6907.105048",
        "type": "inject",
        "z": "69238f4c.8e23f",
        "name": "wakker worden!",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "weatherStation/ONTWAAK",
        "payload": "true",
        "payloadType": "bool",
        "x": 149.99998474121094,
        "y": 244.9999942779541,
        "wires": [
            [
                "3f295a28.6d0cd6",
                "7829b1e8.85ee"
            ]
        ]
    },
    {
        "id": "c9bd2aec.b70218",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "Wemos is wakker",
        "topic": "weatherStation/ONTWAAKT",
        "qos": "0",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 135.83331298828125,
        "y": 435.6666793823242,
        "wires": [
            [
                "3f295a28.6d0cd6"
            ]
        ]
    },
    {
        "id": "72a24e15.efc13",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "weatherStation/DHT/humidity",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 211,
        "y": 752,
        "wires": [
            [
                "93432ecb.847c9"
            ]
        ]
    },
    {
        "id": "846ac47f.678f58",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 725.9999923706055,
        "y": 791.3333396911621,
        "wires": []
    },
    {
        "id": "93432ecb.847c9",
        "type": "function",
        "z": "69238f4c.8e23f",
        "name": "percentSimbool",
        "func": "if(msg.topic == \"weatherStation/DHT/humidity\") {\n    msg.payload += \"%\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 479.00000762939453,
        "y": 753.6666631698608,
        "wires": [
            [
                "846ac47f.678f58",
                "ba17a75a.c27508"
            ]
        ]
    },
    {
        "id": "ba17a75a.c27508",
        "type": "ui_text",
        "z": "69238f4c.8e23f",
        "group": "fb508433.7560a8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Luchtvochtigheid",
        "label": "python Luchtvochtigheid: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 737.9999923706055,
        "y": 720.6666564941406,
        "wires": []
    },
    {
        "id": "bf07352c.e84938",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "dht/temperature",
        "topic": "weatherStation/DHT/temperature",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 149.00001525878906,
        "y": 949.9999990463257,
        "wires": [
            [
                "27ed9bcd.c466d4",
                "266f2c47.d909f4",
                "f5eb4255.41c5f"
            ]
        ]
    },
    {
        "id": "266f2c47.d909f4",
        "type": "function",
        "z": "69238f4c.8e23f",
        "name": "gradenSimbool",
        "func": "if(msg.topic == \"weatherStation/DHT/temperature\") {\n    msg.payload += \"°C\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 409.8334426879883,
        "y": 988.6667032241821,
        "wires": [
            [
                "1c87110c.c2029f"
            ]
        ]
    },
    {
        "id": "1c87110c.c2029f",
        "type": "ui_text",
        "z": "69238f4c.8e23f",
        "group": "fb508433.7560a8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "temperatuur",
        "label": "python Temp. laatste sensor meting:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 674.8333969116211,
        "y": 977.6666669845581,
        "wires": []
    },
    {
        "id": "d295f5d1.2915d8",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "weatherStation/DHT/luchtdruk",
        "topic": "weatherStation/DHT/luchtdruk",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 200,
        "y": 1080,
        "wires": [
            [
                "212655df.48861a"
            ]
        ]
    },
    {
        "id": "212655df.48861a",
        "type": "function",
        "z": "69238f4c.8e23f",
        "name": "hpa simbool",
        "func": "if(msg.topic == \"weatherStation/DHT/luchtdruk\") {\n    msg.payload = parseInt(msg.payload) / 100 + \"hPa\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 439.8333435058594,
        "y": 1076.6666259765625,
        "wires": [
            [
                "4c00a780.1afc98"
            ]
        ]
    },
    {
        "id": "4c00a780.1afc98",
        "type": "ui_text",
        "z": "69238f4c.8e23f",
        "group": "fb508433.7560a8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Lugdruk",
        "label": "python Luchtdruk: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 651.8333892822266,
        "y": 1080.6666240692139,
        "wires": []
    },
    {
        "id": "6bb7f00d.b6b06",
        "type": "sqlite",
        "z": "69238f4c.8e23f",
        "mydb": "b74d5871.22be88",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "iot.db",
        "x": 430,
        "y": 1260,
        "wires": [
            [
                "b25c5696.89f7c8"
            ]
        ]
    },
    {
        "id": "59899cfd.2426f4",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 890,
        "y": 1280,
        "wires": []
    },
    {
        "id": "308e9406.31355c",
        "type": "inject",
        "z": "69238f4c.8e23f",
        "name": "lijst temperature_record  ",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 30",
        "payload": "",
        "payloadType": "date",
        "x": 193.99999237060547,
        "y": 1212.6666622161865,
        "wires": [
            [
                "6bb7f00d.b6b06"
            ]
        ]
    },
    {
        "id": "1f344aed.47b8e5",
        "type": "inject",
        "z": "69238f4c.8e23f",
        "name": "laatste tempC",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 1",
        "payload": "",
        "payloadType": "str",
        "x": 171.0000114440918,
        "y": 1322.0000343322754,
        "wires": [
            [
                "6bb7f00d.b6b06"
            ]
        ]
    },
    {
        "id": "deaf9be2.4bf608",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "temp debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 855.1666946411133,
        "y": 903.3333339691162,
        "wires": []
    },
    {
        "id": "27ed9bcd.c466d4",
        "type": "function",
        "z": "69238f4c.8e23f",
        "name": "sql insert temperature_record",
        "func": "var overrideMain = global.get('overrideMain');\nvar overrideTable = global.get('overrideTable');\n\n\n// Update the status with current timestamp\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\nvar timeFormat= dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss;\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Last update: \"+timeFormat});    \n\n//var top=msg.topic.toString();\nvar device_name=\"1fe58100\";\nvar pay=msg.payload;\nvar rec_num=Math.floor((Math.random() * 10000000) + 1) ;\n\nif(msg.topic.includes(\"temperature\"))\n{\n    msg.topic = \"INSERT INTO temperature_record (device_name,rec_num,temperature) VALUES (?,?,?)\";\n    msg.payload = [device_name,rec_num,pay];\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 427.83343505859375,
        "y": 911.6666655540466,
        "wires": [
            [
                "52e9dcc9.fe9a64"
            ]
        ]
    },
    {
        "id": "b25c5696.89f7c8",
        "type": "ui_template",
        "z": "69238f4c.8e23f",
        "group": "fb508433.7560a8",
        "name": "toon Tabel",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<table style=\"width:320% height=250%\">\n  <tr>\n    <th colspan=\"5\">Meest recente meetdata</th> \n  </tr>\n  <tr>\n    <th>datum</th> \n    <th>gem_tempC</th>\n    <th>minC</th> \n    <th>maxC</th>\n    <th>aantalMetingen</th>\n  </tr>\n  <tr ng-repeat=\"row in msg.payload | limitTo:30\">\n    <td>{{msg.payload[$index].datum}}</td>\n    <td>{{msg.payload[$index].gem_tempC}}</td> \n    <td>{{msg.payload[$index].minC}}</td>\n    <td>{{msg.payload[$index].maxC}}</td>\n    <td>{{msg.payload[$index].aantalMetingen}}</td>\n  </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 690.1666793823242,
        "y": 1263.9999980926514,
        "wires": [
            [
                "59899cfd.2426f4"
            ]
        ]
    },
    {
        "id": "ef7e26f5.afc488",
        "type": "ui_button",
        "z": "69238f4c.8e23f",
        "name": "",
        "group": "fb508433.7560a8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Laatse 30 metingen",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 30",
        "x": 170.16668701171875,
        "y": 1251.666452407837,
        "wires": [
            [
                "6bb7f00d.b6b06",
                "3129bae7.9f02a6"
            ]
        ]
    },
    {
        "id": "d93f2308.61bc6",
        "type": "ui_button",
        "z": "69238f4c.8e23f",
        "name": "",
        "group": "fb508433.7560a8",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Laatste temp",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 1",
        "x": 160.1666717529297,
        "y": 1369.6664581298828,
        "wires": [
            [
                "6bb7f00d.b6b06"
            ]
        ]
    },
    {
        "id": "52e9dcc9.fe9a64",
        "type": "sqlite",
        "z": "69238f4c.8e23f",
        "mydb": "b74d5871.22be88",
        "sql": "",
        "name": "iot.db",
        "x": 672.8333930969238,
        "y": 900.6667442321777,
        "wires": [
            [
                "deaf9be2.4bf608"
            ]
        ]
    },
    {
        "id": "7829b1e8.85ee",
        "type": "function",
        "z": "69238f4c.8e23f",
        "name": "setWakkerTotSlaaptijdMinuten",
        "func": "var setWakkerTotSlaaptijdMinuten = 1\n\nvar today = new Date();\n\nif(msg.topic == \"weatherStation/ONTWAAK\")\n{\n    if(msg.payload == \"getWakkerBlijvenInterval\")\n    {\n        msg.payload = parseInt(setWakkerTotSlaaptijdMinuten);\n    }\n    \n    if(parseInt(msg.payload) == 1)\n    {\n        msg.payload = setWakkerTotSlaaptijdMinuten;\n    }\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 516.0000076293945,
        "y": 269.00000953674316,
        "wires": [
            []
        ]
    },
    {
        "id": "7c920fee.25bf3",
        "type": "debug",
        "z": "69238f4c.8e23f",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 711.1666831970215,
        "y": 1403.0000324249268,
        "wires": []
    },
    {
        "id": "bfc89662.a05218",
        "type": "inject",
        "z": "69238f4c.8e23f",
        "name": "testwaarde",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "{ \"weerdata\": [{ \"clientid\": \"1fe58100\", \"temp\": 24.0833, \"luchtdruk\": 100879.0 }] }",
        "payloadType": "str",
        "x": 165.16668701171875,
        "y": 1499.6667003631592,
        "wires": [
            [
                "f7a8cc69.ecbff"
            ]
        ]
    },
    {
        "id": "f7a8cc69.ecbff",
        "type": "json",
        "z": "69238f4c.8e23f",
        "name": "",
        "x": 453.16667556762695,
        "y": 1468.333366394043,
        "wires": [
            [
                "7c920fee.25bf3"
            ]
        ]
    },
    {
        "id": "db55df26.8fec6",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "weatherStation/DHT/temperature_json",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 170,
        "y": 1420,
        "wires": [
            [
                "f7a8cc69.ecbff"
            ]
        ]
    },
    {
        "id": "4252a52.ac3975c",
        "type": "http in",
        "z": "69238f4c.8e23f",
        "name": "chuck_norris_api",
        "url": "https://api.chucknorris.io/jokes/random",
        "method": "get",
        "swaggerDoc": "",
        "x": 166.16668319702148,
        "y": 1573.666696548462,
        "wires": [
            [
                "f7a8cc69.ecbff"
            ]
        ]
    },
    {
        "id": "f5eb4255.41c5f",
        "type": "mqtt out",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "dht/temperature",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7003ac79.485954",
        "x": 387.99999618530273,
        "y": 848.3333225250244,
        "wires": []
    },
    {
        "id": "3129bae7.9f02a6",
        "type": "mqtt out",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "dietpi/lijstweer",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5c5d1421.257f6c",
        "x": 500,
        "y": 1180,
        "wires": []
    },
    {
        "id": "41901133.14a2d",
        "type": "mqtt in",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "dietpi/getweer",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 148,
        "y": 1163.3331146240234,
        "wires": [
            [
                "6bb7f00d.b6b06"
            ]
        ]
    },
    {
        "id": "104131d1.05643e",
        "type": "mqtt out",
        "z": "69238f4c.8e23f",
        "name": "",
        "topic": "weatherStation/deepSleepIntervalSekonden/waarde",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7003ac79.485954",
        "x": 931.8333129882812,
        "y": 278.999981880188,
        "wires": []
    },
    {
        "id": "e1eef909.58c3c8",
        "type": "mqtt in",
        "z": "43f95fa6.1e9ed",
        "name": "",
        "topic": "json_test/hello",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 130,
        "y": 120,
        "wires": [
            [
                "b8145a34.4f46f8"
            ]
        ]
    },
    {
        "id": "b8145a34.4f46f8",
        "type": "json",
        "z": "43f95fa6.1e9ed",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 336.0000228881836,
        "y": 83.66665840148926,
        "wires": [
            [
                "a7544bfd.b633d8"
            ]
        ]
    },
    {
        "id": "a7544bfd.b633d8",
        "type": "debug",
        "z": "43f95fa6.1e9ed",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 512.0000152587891,
        "y": 139.3333282470703,
        "wires": []
    },
    {
        "id": "4cb76ea8.a22a5",
        "type": "find-my-iphone",
        "z": "43f95fa6.1e9ed",
        "x": 338.0000228881836,
        "y": 252.3333511352539,
        "wires": [
            [
                "a7544bfd.b633d8"
            ]
        ]
    },
    {
        "id": "217d6796.1af0e8",
        "type": "inject",
        "z": "43f95fa6.1e9ed",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130.99999618530273,
        "y": 247.99999618530273,
        "wires": [
            [
                "4cb76ea8.a22a5"
            ]
        ]
    },
    {
        "id": "08b6083d52fc1775",
        "type": "base64",
        "z": "43f95fa6.1e9ed",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 260,
        "y": 40,
        "wires": [
            [
                "b8145a34.4f46f8"
            ]
        ]
    },
    {
        "id": "fbf7b6848b5989d3",
        "type": "mqtt in",
        "z": "43f95fa6.1e9ed",
        "name": "",
        "topic": "base64plaatje",
        "qos": "2",
        "datatype": "auto",
        "broker": "a6a3041b.8ef2e8",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 90,
        "y": 60,
        "wires": [
            [
                "08b6083d52fc1775"
            ]
        ]
    },
    {
        "id": "8b250227.d5409",
        "type": "mqtt out",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "topic": "lichtkrant/tape",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7003ac79.485954",
        "x": 952,
        "y": 217.33330917358398,
        "wires": []
    },
    {
        "id": "b07b1590.a1ed58",
        "type": "mqtt in",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "topic": "lichtkrant/mqqt_connect",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 126,
        "y": 289.9999809265137,
        "wires": [
            [
                "859ea37d.fbb3f",
                "73634d93.e89724"
            ]
        ]
    },
    {
        "id": "859ea37d.fbb3f",
        "type": "debug",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 375.00000762939453,
        "y": 320.3333339691162,
        "wires": []
    },
    {
        "id": "6b4a6abd.f44294",
        "type": "inject",
        "z": "5ba46c1d.b961a4",
        "name": "Wemos led uit",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 114,
        "y": 460.9999828338623,
        "wires": [
            [
                "f201b039.b81b6"
            ]
        ]
    },
    {
        "id": "f201b039.b81b6",
        "type": "mqtt out",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "topic": "ledStatus",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7003ac79.485954",
        "x": 400.00000762939453,
        "y": 443.33331775665283,
        "wires": []
    },
    {
        "id": "26b22f80.ccc09",
        "type": "inject",
        "z": "5ba46c1d.b961a4",
        "name": "Wemos led aan",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 118.83331298828125,
        "y": 517.666651725769,
        "wires": [
            [
                "f201b039.b81b6"
            ]
        ]
    },
    {
        "id": "9c7cc292.01f24",
        "type": "function",
        "z": "5ba46c1d.b961a4",
        "name": "lichtkrant tekst",
        "func": "// msg.payload = \"aponsen.. Verlangen, vervloeken Verdoemen, verzoeking Verdoemenis beloven Verbranden en vernietigen Verspreiden ze geboden    liefde    aponsen@hotmail.com        knuffelbeest                    liefde                 xx          mens         \";\n// msg.payload = \"    MQQT tekst         niet ONS huis maar MIJN huis        is dat liefde?     Leef aponsen@hotmail.com         \";\nmsg.payload = \"    MQQT tekst           \";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 435,
        "y": 177.6666431427002,
        "wires": [
            [
                "8b250227.d5409"
            ]
        ]
    },
    {
        "id": "73634d93.e89724",
        "type": "http request",
        "z": "5ba46c1d.b961a4",
        "name": "GET chuck norris",
        "method": "GET",
        "ret": "txt",
        "url": "https://api.chucknorris.io/jokes/random",
        "tls": "",
        "x": 410.99999237060547,
        "y": 92.66664123535156,
        "wires": [
            [
                "3e52107.b8623f",
                "9c7cc292.01f24"
            ]
        ]
    },
    {
        "id": "1f8b7fe2.09836",
        "type": "inject",
        "z": "5ba46c1d.b961a4",
        "name": "scrolltext hier",
        "repeat": "2040",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "doen Chuck Norris lichtkrant",
        "payloadType": "str",
        "x": 127.83331298828125,
        "y": 64.66664218902588,
        "wires": [
            [
                "73634d93.e89724"
            ]
        ]
    },
    {
        "id": "86aa11d4.fd819",
        "type": "debug",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 995.0000038146973,
        "y": 90.33331298828125,
        "wires": []
    },
    {
        "id": "611533f.5ad21cc",
        "type": "function",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "func": "msg.payload = \" XX \" + msg.payload[\"value\"] + \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 769,
        "y": 80.6666488647461,
        "wires": [
            [
                "86aa11d4.fd819",
                "8b250227.d5409"
            ]
        ]
    },
    {
        "id": "3e52107.b8623f",
        "type": "json",
        "z": "5ba46c1d.b961a4",
        "name": "",
        "x": 605,
        "y": 74.66663932800293,
        "wires": [
            [
                "611533f.5ad21cc"
            ]
        ]
    },
    {
        "id": "9d0096c9.3e80b8",
        "type": "mqtt in",
        "z": "855b7076.01ac4",
        "name": "",
        "topic": "octoPrint/",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 120,
        "y": 60,
        "wires": [
            [
                "6b843a66.0bdf14"
            ]
        ]
    },
    {
        "id": "6b843a66.0bdf14",
        "type": "debug",
        "z": "855b7076.01ac4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 730,
        "y": 40,
        "wires": []
    },
    {
        "id": "8d5f9cf8.29366",
        "type": "mqtt in",
        "z": "855b7076.01ac4",
        "name": "",
        "topic": "octoPrint/event/",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 134,
        "y": 181,
        "wires": [
            [
                "6b843a66.0bdf14"
            ]
        ]
    },
    {
        "id": "49e0a796.e405a8",
        "type": "mqtt in",
        "z": "855b7076.01ac4",
        "name": "",
        "topic": "homeassistant/switch/octoprint_PSUControl_switch/set",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "6b843a66.0bdf14"
            ]
        ]
    },
    {
        "id": "784d4782.239258",
        "type": "mqtt in",
        "z": "855b7076.01ac4",
        "name": "",
        "topic": "homeassistant/switch/octoprint_PSUControl_switch/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "6b843a66.0bdf14"
            ]
        ]
    },
    {
        "id": "fa08b4da.102618",
        "type": "mqtt in",
        "z": "855b7076.01ac4",
        "name": "",
        "topic": "homeassistant/switch/octoprint_PSUControl_switch/availability",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 260,
        "y": 420,
        "wires": [
            [
                "6b843a66.0bdf14"
            ]
        ]
    },
    {
        "id": "eb0fa79d.86c0f8",
        "type": "mqtt in",
        "z": "95a267b0.dfbf78",
        "name": "timestamp_utc",
        "topic": "p1monitor/smartmeter/timestamp_utc",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 170,
        "y": 160,
        "wires": [
            [
                "7b117f5c.ba908"
            ]
        ]
    },
    {
        "id": "7b117f5c.ba908",
        "type": "debug",
        "z": "95a267b0.dfbf78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "836fb51a.227c38",
        "type": "ui_text",
        "z": "95a267b0.dfbf78",
        "group": "fb508433.7560a8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "kw.U verbruik",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 540,
        "y": 300,
        "wires": []
    },
    {
        "id": "8ac88b07.cc4ad8",
        "type": "mqtt in",
        "z": "95a267b0.dfbf78",
        "name": "consumption_gas_m3",
        "topic": "p1monitor/smartmeter/consumption_gas_m3",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f1a9aa5c.541238",
        "type": "mqtt in",
        "z": "95a267b0.dfbf78",
        "name": "consumption_kw",
        "topic": "p1monitor/smartmeter/consumption_kw",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "7b117f5c.ba908",
                "6eb63f94.937a2",
                "836fb51a.227c38"
            ]
        ]
    },
    {
        "id": "6eb63f94.937a2",
        "type": "ui_gauge",
        "z": "95a267b0.dfbf78",
        "name": "",
        "group": "fb508433.7560a8",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "4000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 520,
        "y": 400,
        "wires": []
    },
    {
        "id": "ba7520f3.d26278",
        "type": "mqtt in",
        "z": "95a267b0.dfbf78",
        "name": "p1monitor/smartmeter/timestamp_local",
        "topic": "p1monitor/smartmeter/timestamp_local",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 230,
        "y": 60,
        "wires": [
            [
                "7b117f5c.ba908"
            ]
        ]
    },
    {
        "id": "fcbbfad.1e64e08",
        "type": "mqtt in",
        "z": "a7951a73.242a18",
        "name": "",
        "topic": "wled/light/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "2af5f603.85ff3a"
            ]
        ]
    },
    {
        "id": "2af5f603.85ff3a",
        "type": "debug",
        "z": "a7951a73.242a18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "528db2eb.2dea0c",
        "type": "mqtt in",
        "z": "a7951a73.242a18",
        "name": "",
        "topic": "led/light/switch",
        "qos": "2",
        "datatype": "auto",
        "broker": "5c5d1421.257f6c",
        "inputs": 0,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "2af5f603.85ff3a"
            ]
        ]
    },
    {
        "id": "6ae77e2c.bb4c8",
        "type": "mqtt in",
        "z": "a7951a73.242a18",
        "name": "",
        "topic": "wled/79139d",
        "qos": "2",
        "datatype": "auto",
        "broker": "5c5d1421.257f6c",
        "inputs": 0,
        "x": 170,
        "y": 340,
        "wires": [
            [
                "2af5f603.85ff3a"
            ]
        ]
    },
    {
        "id": "fac93b98.785d8",
        "type": "mqtt in",
        "z": "eab7e4b1.f833c",
        "name": "",
        "topic": "homebridge/seton",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 260,
        "y": 100,
        "wires": [
            [
                "f7353cc8.73fb18"
            ]
        ]
    },
    {
        "id": "f7353cc8.73fb18",
        "type": "debug",
        "z": "eab7e4b1.f833c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "467cba3e.0eb19c",
        "type": "mqtt in",
        "z": "eab7e4b1.f833c",
        "name": "",
        "topic": "homebridge/getonline",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 290,
        "y": 220,
        "wires": [
            [
                "fdd55aeacfc7809b"
            ]
        ]
    },
    {
        "id": "61013161.70e69",
        "type": "mqtt in",
        "z": "eab7e4b1.f833c",
        "name": "",
        "topic": "homebridge/startup",
        "qos": "2",
        "datatype": "auto",
        "broker": "7003ac79.485954",
        "nl": false,
        "rap": false,
        "rh": "0",
        "inputs": 0,
        "x": 280,
        "y": 320,
        "wires": [
            [
                "f7353cc8.73fb18"
            ]
        ]
    },
    {
        "id": "fdd55aeacfc7809b",
        "type": "homekit-service",
        "z": "eab7e4b1.f833c",
        "isParent": "false",
        "hostType": 0,
        "bridge": "",
        "accessoryId": "",
        "parentService": "",
        "name": "",
        "serviceName": "",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "1.4.3",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.4.3",
        "hardwareRev": "1.4.3",
        "softwareRev": "1.4.3",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 540,
        "y": 300,
        "wires": [
            [
                "f7353cc8.73fb18"
            ],
            []
        ]
    },
    {
        "id": "88277a33.f22a58",
        "type": "mqtt in",
        "z": "5a52a983.5025e8",
        "name": "",
        "topic": "deepsleep_hallo_wereld_20190123/hallo",
        "qos": "2",
        "broker": "a6a3041b.8ef2e8",
        "inputs": 0,
        "x": 247.16668701171875,
        "y": 77.3333511352539,
        "wires": [
            [
                "66d547a1.fb2298"
            ]
        ]
    },
    {
        "id": "66d547a1.fb2298",
        "type": "debug",
        "z": "5a52a983.5025e8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 661.1666831970215,
        "y": 96.66667366027832,
        "wires": []
    },
    {
        "id": "90817a94.6fc3e8",
        "type": "mqtt in",
        "z": "5a52a983.5025e8",
        "name": "Wemos is wakker",
        "topic": "deepsleep_hallo_wereld_20190123/reboot/setup",
        "qos": "0",
        "broker": "a6a3041b.8ef2e8",
        "inputs": 0,
        "x": 124,
        "y": 407.0000009536743,
        "wires": [
            [
                "94d05079.7dcf8"
            ]
        ]
    },
    {
        "id": "94d05079.7dcf8",
        "type": "function",
        "z": "5a52a983.5025e8",
        "name": "setdeepSleepInterval 30minuten",
        "func": "var deepSleepInterval = 30*60;\n\nif(msg.topic == \"deepsleep_hallo_wereld_20190123/reboot/setup\")\n{\n    if(parseInt(msg.payload) == 1)\n    {\n        msg.payload = parseInt(deepSleepInterval);\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 519.0000152587891,
        "y": 358.6666965484619,
        "wires": [
            [
                "ca04f79c.e1b9f8",
                "9ec4a980.817dc8"
            ]
        ]
    },
    {
        "id": "ca04f79c.e1b9f8",
        "type": "mqtt out",
        "z": "5a52a983.5025e8",
        "name": "",
        "topic": "deepsleep_hallo_wereld_20190123/deepSleepIntervalSekonden/waarde",
        "qos": "2",
        "retain": "",
        "broker": "a6a3041b.8ef2e8",
        "x": 989,
        "y": 316.3333330154419,
        "wires": []
    },
    {
        "id": "9ec4a980.817dc8",
        "type": "debug",
        "z": "5a52a983.5025e8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 820,
        "y": 432.3333578109741,
        "wires": []
    },
    {
        "id": "a1ffc9ea.dd7b98",
        "type": "inject",
        "z": "5a52a983.5025e8",
        "name": "inject deepSleepIntervalSekonden",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "deepsleep_hallo_wereld_20190123/reboot/setup",
        "payload": "30",
        "payloadType": "str",
        "x": 198.00001525878906,
        "y": 214,
        "wires": [
            [
                "ca04f79c.e1b9f8"
            ]
        ]
    },
    {
        "id": "fba66d89.3e7e3",
        "type": "mqtt in",
        "z": "5a52a983.5025e8",
        "name": "halloWereld",
        "topic": "halloWereld",
        "qos": "2",
        "broker": "a6a3041b.8ef2e8",
        "inputs": 0,
        "x": 205,
        "y": 537.0000486373901,
        "wires": [
            [
                "e49cf77d.a65f18"
            ]
        ]
    },
    {
        "id": "e49cf77d.a65f18",
        "type": "debug",
        "z": "5a52a983.5025e8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 523,
        "y": 549.3333616256714,
        "wires": []
    },
    {
        "id": "f606f3d2.82c61",
        "type": "inject",
        "z": "5a52a983.5025e8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "weatherstation/bmp1/debug",
        "payload": "1",
        "payloadType": "num",
        "x": 251.99998474121094,
        "y": 668.0000655651093,
        "wires": [
            [
                "6988fcf6.bc5954"
            ]
        ]
    },
    {
        "id": "6988fcf6.bc5954",
        "type": "mqtt out",
        "z": "5a52a983.5025e8",
        "name": "",
        "topic": "weatherstation/bmp1/debug",
        "qos": "2",
        "retain": "",
        "broker": "a6a3041b.8ef2e8",
        "x": 694.9999961853027,
        "y": 647.3333578109741,
        "wires": []
    },
    {
        "id": "da74b68c.1b7828",
        "type": "inject",
        "z": "5a52a983.5025e8",
        "name": "wakker worden!",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "deepsleep_hallo_wereld_20190123/reboot/setup",
        "payload": "true",
        "payloadType": "bool",
        "x": 137.1666717529297,
        "y": 282.333345413208,
        "wires": [
            [
                "94d05079.7dcf8"
            ]
        ]
    },
    {
        "id": "ec0decf1.30b0c",
        "type": "mqtt in",
        "z": "a81c1cbe.ba134",
        "name": "",
        "topic": "weatherStation/DHT/humidity",
        "qos": "2",
        "broker": "a6a3041b.8ef2e8",
        "inputs": 0,
        "x": 178,
        "y": 98.33334350585938,
        "wires": [
            [
                "af6e9840.1b9638"
            ]
        ]
    },
    {
        "id": "5c86aef2.7db23",
        "type": "debug",
        "z": "a81c1cbe.ba134",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 692.9999923706055,
        "y": 137.66668319702148,
        "wires": []
    },
    {
        "id": "af6e9840.1b9638",
        "type": "function",
        "z": "a81c1cbe.ba134",
        "name": "percentSimbool",
        "func": "if(msg.topic == \"weatherStation/DHT/humidity\") {\n    msg.payload += \"%\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 446.00000762939453,
        "y": 100.00000667572021,
        "wires": [
            [
                "5c86aef2.7db23",
                "c8014678.0a1178"
            ]
        ]
    },
    {
        "id": "c8014678.0a1178",
        "type": "ui_text",
        "z": "a81c1cbe.ba134",
        "group": "4a483c89.03dcd4",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Luchtvochtigheid",
        "label": "Luchtvochtigheid: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 704.9999923706055,
        "y": 67,
        "wires": []
    },
    {
        "id": "dede3d73.84c33",
        "type": "mqtt in",
        "z": "a81c1cbe.ba134",
        "name": "dht/temperature",
        "topic": "weatherStation/DHT/temperature",
        "qos": "2",
        "broker": "a6a3041b.8ef2e8",
        "inputs": 0,
        "x": 116.00001525878906,
        "y": 296.33334255218506,
        "wires": [
            [
                "5fba0da.a580ff4",
                "942db906.5164f8"
            ]
        ]
    },
    {
        "id": "942db906.5164f8",
        "type": "function",
        "z": "a81c1cbe.ba134",
        "name": "gradenSimbool",
        "func": "if(msg.topic == \"weatherStation/DHT/temperature\") {\n    msg.payload += \"°C\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 376.8334426879883,
        "y": 335.0000467300415,
        "wires": [
            [
                "f7d1c57a.4cf6d8"
            ]
        ]
    },
    {
        "id": "f7d1c57a.4cf6d8",
        "type": "ui_text",
        "z": "a81c1cbe.ba134",
        "group": "4a483c89.03dcd4",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "temperatuur",
        "label": "Temp. laatste sensor meting:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 641.8333969116211,
        "y": 324.0000104904175,
        "wires": []
    },
    {
        "id": "89901d3e.76397",
        "type": "sqlite",
        "z": "a81c1cbe.ba134",
        "mydb": "5d8f5b3f.4828a4",
        "name": "iot.db",
        "x": 639.8333930969238,
        "y": 247.0000877380371,
        "wires": [
            [
                "fba971d3.9b42c"
            ]
        ]
    },
    {
        "id": "847da4ac.418778",
        "type": "mqtt in",
        "z": "a81c1cbe.ba134",
        "name": "weatherStation/DHT/luchtdruk",
        "topic": "weatherStation/DHT/luchtdruk",
        "qos": "2",
        "broker": "a6a3041b.8ef2e8",
        "inputs": 0,
        "x": 179,
        "y": 439.00005531311035,
        "wires": [
            [
                "fa973721.6c7ae8"
            ]
        ]
    },
    {
        "id": "fa973721.6c7ae8",
        "type": "function",
        "z": "a81c1cbe.ba134",
        "name": "hpa simbool",
        "func": "if(msg.topic == \"weatherStation/DHT/luchtdruk\") {\n    msg.payload = parseInt(msg.payload) / 100 + \"hPa\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 418.8333435058594,
        "y": 435.66668128967285,
        "wires": [
            [
                "86dff1f0.e3da7"
            ]
        ]
    },
    {
        "id": "86dff1f0.e3da7",
        "type": "ui_text",
        "z": "a81c1cbe.ba134",
        "group": "4a483c89.03dcd4",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Lugdruk",
        "label": "Luchtdruk: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630.8333892822266,
        "y": 439.6666793823242,
        "wires": []
    },
    {
        "id": "2a3adcea.c96914",
        "type": "sqlite",
        "z": "a81c1cbe.ba134",
        "mydb": "8c33d897.72eff8",
        "name": "",
        "x": 439,
        "y": 583.0002288818359,
        "wires": [
            [
                "37b9a0c5.a7365"
            ]
        ]
    },
    {
        "id": "bde2c40e.0ce168",
        "type": "debug",
        "z": "a81c1cbe.ba134",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 858.0001792907715,
        "y": 576.0002288818359,
        "wires": []
    },
    {
        "id": "582db1a0.9397c",
        "type": "inject",
        "z": "a81c1cbe.ba134",
        "name": "lijst temperature_record  ",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 30",
        "payload": "",
        "payloadType": "date",
        "x": 162.99999237060547,
        "y": 535.6668910980225,
        "wires": [
            [
                "2a3adcea.c96914"
            ]
        ]
    },
    {
        "id": "fa81a64e.84fe18",
        "type": "inject",
        "z": "a81c1cbe.ba134",
        "name": "laatste tempC",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 1",
        "payload": "",
        "payloadType": "str",
        "x": 140.0000114440918,
        "y": 645.0002632141113,
        "wires": [
            [
                "2a3adcea.c96914"
            ]
        ]
    },
    {
        "id": "fba971d3.9b42c",
        "type": "debug",
        "z": "a81c1cbe.ba134",
        "name": "temp debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 822.1666946411133,
        "y": 249.6666774749756,
        "wires": []
    },
    {
        "id": "5fba0da.a580ff4",
        "type": "function",
        "z": "a81c1cbe.ba134",
        "name": "sql insert temperature_record",
        "func": "var overrideMain = global.get('overrideMain');\nvar overrideTable = global.get('overrideTable');\n\n\n// Update the status with current timestamp\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\nvar timeFormat= dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss;\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Last update: \"+timeFormat});    \n\n//var top=msg.topic.toString();\nvar device_name=\"wemos D1\";\nvar pay=msg.payload;\nvar rec_num=Math.floor((Math.random() * 10000000) + 1) ;\n\nif(msg.topic.includes(\"temperature\"))\n{\n    msg.topic = \"INSERT INTO temperature_record (device_name,rec_num,temperature) VALUES (?,?,?)\";\n    msg.payload = [device_name,rec_num,pay];\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 394.83343505859375,
        "y": 258.000009059906,
        "wires": [
            [
                "89901d3e.76397"
            ]
        ]
    },
    {
        "id": "37b9a0c5.a7365",
        "type": "ui_template",
        "z": "a81c1cbe.ba134",
        "group": "9062393a.fc7528",
        "name": "toon Tabel",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<table style=\"width:320% height=250%\">\n  <tr>\n    <th colspan=\"5\">Meest recente meetdata</th> \n  </tr>\n  <tr>\n    <th>datum</th> \n    <th>gem_tempC</th>\n    <th>minC</th> \n    <th>maxC</th>\n    <th>aantalMetingen</th>\n  </tr>\n  <tr ng-repeat=\"row in msg.payload | limitTo:30\">\n    <td>{{msg.payload[$index].datum}}</td>\n    <td>{{msg.payload[$index].gem_tempC}}</td> \n    <td>{{msg.payload[$index].minC}}</td>\n    <td>{{msg.payload[$index].maxC}}</td>\n    <td>{{msg.payload[$index].aantalMetingen}}</td>\n  </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 659.1666793823242,
        "y": 587.0002269744873,
        "wires": [
            [
                "bde2c40e.0ce168"
            ]
        ]
    },
    {
        "id": "3a44c244.120ece",
        "type": "ui_button",
        "z": "a81c1cbe.ba134",
        "name": "",
        "group": "9062393a.fc7528",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Laatset 30 metingen",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 30",
        "x": 149.16668701171875,
        "y": 574.6666812896729,
        "wires": [
            [
                "2a3adcea.c96914"
            ]
        ]
    },
    {
        "id": "f34ad7d9.585b58",
        "type": "ui_button",
        "z": "a81c1cbe.ba134",
        "name": "",
        "group": "9062393a.fc7528",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Laatste temp",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "SELECT  strftime('%Y-%m-%d', \"date_time\") datum, round(avg(\"temperature\" ), 1) gem_tempC, round(min(\"temperature\" ), 1) minC, round(max(\"temperature\" ), 1) maxC, round(count(\"temperature\" ), 1) aantalMetingen  FROM temperature_record  WHERE \"date_time\" >= \"2018-12-01 10:00:00\"  and  \"2018-12-31 13:00:00\"  GROUP BY strftime('%Y-%m-%d', \"date_time\")  Order BY strftime('%Y-%m-%d', \"date_time\") desc  limit 0, 1",
        "x": 129.1666717529297,
        "y": 692.6666870117188,
        "wires": [
            [
                "2a3adcea.c96914"
            ]
        ]
    },
    {
        "id": "18468321.e8685d",
        "type": "mqtt out",
        "z": "417eb1f6.8256b",
        "name": "urbanlink.nl",
        "topic": "Topic 1",
        "qos": "",
        "retain": "",
        "broker": "299035ac.954eca",
        "x": 1028.166690826416,
        "y": 26.666704177856445,
        "wires": []
    },
    {
        "id": "5edef6c4.9b7c18",
        "type": "inject",
        "z": "417eb1f6.8256b",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630.166690826416,
        "y": 30.333349227905273,
        "wires": [
            [
                "43f89472.9f9d2c"
            ]
        ]
    },
    {
        "id": "43f89472.9f9d2c",
        "type": "function",
        "z": "417eb1f6.8256b",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 814.166690826416,
        "y": 58,
        "wires": [
            [
                "18468321.e8685d"
            ]
        ]
    },
    {
        "id": "4734acfc.3131e4",
        "type": "mqtt in",
        "z": "417eb1f6.8256b",
        "name": "",
        "topic": "Topic 1",
        "qos": "2",
        "broker": "299035ac.954eca",
        "inputs": 0,
        "x": 625.1667022705078,
        "y": 139.33334064483643,
        "wires": [
            [
                "730a8013.1c09d"
            ]
        ]
    },
    {
        "id": "730a8013.1c09d",
        "type": "debug",
        "z": "417eb1f6.8256b",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 911.1666984558105,
        "y": 189.66668701171875,
        "wires": []
    },
    {
        "id": "f94e1e580016f484",
        "type": "mqtt in",
        "z": "a9c62398303cd12b",
        "name": "",
        "topic": "esp32/pressure",
        "qos": "0",
        "datatype": "utf8",
        "broker": "e20e344371a2a87b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 100,
        "wires": [
            [
                "75c59d295b8be657",
                "df620ef6ef404fd5"
            ]
        ]
    },
    {
        "id": "d113bfc3ef25c258",
        "type": "debug",
        "z": "a9c62398303cd12b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "75c59d295b8be657",
        "type": "ui_chart",
        "z": "a9c62398303cd12b",
        "name": "Pressure",
        "group": "3535c8c83f0da586",
        "order": 0,
        "width": "0",
        "height": "0",
        "label": "Pressure",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "940",
        "ymax": "1050",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 400,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9a84d6b2ef0d884d",
        "type": "influxdb out",
        "z": "a9c62398303cd12b",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Pressure",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 730,
        "y": 100,
        "wires": []
    },
    {
        "id": "5360981e4b2fee05",
        "type": "mqtt in",
        "z": "a9c62398303cd12b",
        "name": "",
        "topic": "$SYS/broker/uptime",
        "qos": "0",
        "datatype": "auto",
        "broker": "e20e344371a2a87b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 20,
        "wires": [
            [
                "1ae12d806ff60117"
            ]
        ]
    },
    {
        "id": "6c085f51b755fe6e",
        "type": "debug",
        "z": "a9c62398303cd12b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "3c2650fa26c7835c",
        "type": "mqtt in",
        "z": "a9c62398303cd12b",
        "name": "",
        "topic": "esp32/temperature",
        "qos": "0",
        "datatype": "auto",
        "broker": "e20e344371a2a87b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 260,
        "wires": [
            [
                "313480cd1ea2881d",
                "8a053cb01826a971",
                "9e63e13b885572a0"
            ]
        ]
    },
    {
        "id": "cf99c6ff7f5e15fa",
        "type": "mqtt in",
        "z": "a9c62398303cd12b",
        "name": "",
        "topic": "esp32/Dht_temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "e20e344371a2a87b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 360,
        "wires": [
            [
                "c7b5089852b28d76",
                "f8f046159dad41d2"
            ]
        ]
    },
    {
        "id": "10b2880e95e5c15a",
        "type": "mqtt in",
        "z": "a9c62398303cd12b",
        "name": "",
        "topic": "esp32/humidity",
        "qos": "0",
        "datatype": "auto",
        "broker": "e20e344371a2a87b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 180,
        "wires": [
            [
                "5954409401903b2b",
                "ce23f3cc3d2abf81",
                "36516026d741b968"
            ]
        ]
    },
    {
        "id": "94bc9ec39815bf7d",
        "type": "influxdb out",
        "z": "a9c62398303cd12b",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "humidity",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 730,
        "y": 180,
        "wires": []
    },
    {
        "id": "cdf68acde839d573",
        "type": "influxdb out",
        "z": "a9c62398303cd12b",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Temperature0",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 740,
        "y": 280,
        "wires": []
    },
    {
        "id": "f0f48ab2de3d98a4",
        "type": "influxdb out",
        "z": "a9c62398303cd12b",
        "influxdb": "373fa459.54e07c",
        "name": "",
        "measurement": "Temperature1",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 740,
        "y": 400,
        "wires": []
    },
    {
        "id": "5954409401903b2b",
        "type": "ui_chart",
        "z": "a9c62398303cd12b",
        "name": "Humidity",
        "group": "3535c8c83f0da586",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "313480cd1ea2881d",
        "type": "ui_chart",
        "z": "a9c62398303cd12b",
        "name": "temperature",
        "group": "3535c8c83f0da586",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "60",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 410,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "c7b5089852b28d76",
        "type": "ui_chart",
        "z": "a9c62398303cd12b",
        "name": "Temperature",
        "group": "3535c8c83f0da586",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "60",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 410,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "35aa0e7ff9bcab3a",
        "type": "debug",
        "z": "a9c62398303cd12b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "93f391ca76a5beba",
        "type": "debug",
        "z": "a9c62398303cd12b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "63bfa05f88d89f38",
        "type": "debug",
        "z": "a9c62398303cd12b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "eac46804f3ab8ba6",
        "type": "influxdb out",
        "z": "a9c62398303cd12b",
        "influxdb": "5c9d6bcb2d0f88c0",
        "name": "",
        "measurement": "UP_Time",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 730,
        "y": 20,
        "wires": []
    },
    {
        "id": "8a053cb01826a971",
        "type": "ui_gauge",
        "z": "a9c62398303cd12b",
        "name": "Temperature",
        "group": "3535c8c83f0da586",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 410,
        "y": 360,
        "wires": []
    },
    {
        "id": "ce23f3cc3d2abf81",
        "type": "ui_gauge",
        "z": "a9c62398303cd12b",
        "name": "Humidity",
        "group": "3535c8c83f0da586",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humindity",
        "label": "%RH",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 400,
        "y": 220,
        "wires": []
    },
    {
        "id": "df620ef6ef404fd5",
        "type": "function",
        "z": "a9c62398303cd12b",
        "name": "",
        "func": "//var stringValue = msg.payload;\n\n//convert string to float to 2 decimal places\nvar floatValue = parseFloat(msg.payload);\n\n//set and return payload\nmsg.payload = floatValue;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 60,
        "wires": [
            [
                "9a84d6b2ef0d884d",
                "d113bfc3ef25c258"
            ]
        ]
    },
    {
        "id": "36516026d741b968",
        "type": "function",
        "z": "a9c62398303cd12b",
        "name": "",
        "func": "//var stringValue = msg.payload;\n\n//convert string to float to 2 decimal places\nvar floatValue = parseFloat(msg.payload);\n\n//set and return payload\nmsg.payload = floatValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "35aa0e7ff9bcab3a",
                "94bc9ec39815bf7d"
            ]
        ]
    },
    {
        "id": "f8f046159dad41d2",
        "type": "function",
        "z": "a9c62398303cd12b",
        "name": "",
        "func": "//var stringValue = msg.payload;\n\n//convert string to float to 2 decimal places\nvar floatValue = parseFloat(msg.payload);\n\n//set and return payload\nmsg.payload = floatValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "f0f48ab2de3d98a4",
                "63bfa05f88d89f38"
            ]
        ]
    },
    {
        "id": "9e63e13b885572a0",
        "type": "function",
        "z": "a9c62398303cd12b",
        "name": "",
        "func": "//var stringValue = msg.payload;\n\n//convert string to float to 2 decimal places\nvar floatValue = parseFloat(msg.payload);\n\n//set and return payload\nmsg.payload = floatValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "cdf68acde839d573",
                "93f391ca76a5beba"
            ]
        ]
    },
    {
        "id": "1ae12d806ff60117",
        "type": "function",
        "z": "a9c62398303cd12b",
        "name": "",
        "func": "//var stringValue = msg.payload;\n\n//convert string to float to 2 decimal places\nvar floatValue = parseFloat(msg.payload);\n\n//set and return payload\nmsg.payload = floatValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 20,
        "wires": [
            [
                "6c085f51b755fe6e",
                "eac46804f3ab8ba6"
            ]
        ]
    },
    {
        "id": "d0641d87c118146f",
        "type": "inject",
        "z": "95126d70a8834898",
        "name": "picamera",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "28bef92a0654a485"
            ]
        ]
    },
    {
        "id": "28bef92a0654a485",
        "type": "exec",
        "z": "95126d70a8834898",
        "command": "raspistill",
        "addpay": false,
        "append": "-w 320 -h 240 -o -",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "9ef749d12b17fa5f"
            ],
            [],
            []
        ]
    },
    {
        "id": "9ef749d12b17fa5f",
        "type": "base64",
        "z": "95126d70a8834898",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 560,
        "y": 120,
        "wires": [
            [
                "a6571dd1361c2c86"
            ]
        ]
    },
    {
        "id": "a6571dd1361c2c86",
        "type": "template",
        "z": "95126d70a8834898",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"240px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 760,
        "y": 120,
        "wires": [
            [
                "ae6dbd702b9c129c"
            ]
        ]
    },
    {
        "id": "ae6dbd702b9c129c",
        "type": "ui_template",
        "z": "95126d70a8834898",
        "group": "c7a43587.2944e8",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "5",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 940,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "46ffc819.b736f8",
        "type": "http request",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": false,
        "url": "https://dummyimage.com/200x150/000/fff&text={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 100,
        "wires": [
            [
                "d603e881.2fa1c8"
            ]
        ]
    },
    {
        "id": "25d928c1.708098",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "bufferdIn",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "878f8ec1.effe4"
            ]
        ]
    },
    {
        "id": "878f8ec1.effe4",
        "type": "function",
        "z": "d7baa1bd346d78d0",
        "name": "image counter",
        "func": "var count = flow.get(\"count\")||0;\n\ncount++;\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Image \" + count});\n\n// Save the new value back to context so it will be available next time\nflow.set('count',count);\n\n// Update the message payload and return - no need to create a new msg\nmsg.payload = \"Image \" + count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 100,
        "wires": [
            [
                "46ffc819.b736f8"
            ]
        ]
    },
    {
        "id": "f26c9f732e043006",
        "type": "http request",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": false,
        "url": "https://dummyimage.com/200x150/000/fff&text={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "de6776af4c548661"
            ]
        ]
    },
    {
        "id": "18d79a1dd3df8582",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Base64 input image",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "922d0cbcaddf5ea4"
            ]
        ]
    },
    {
        "id": "922d0cbcaddf5ea4",
        "type": "function",
        "z": "d7baa1bd346d78d0",
        "name": "image counter",
        "func": "var count = flow.get(\"count\")||0;\n\ncount++;\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Image \" + count});\n\n// Save the new value back to context so it will be available next time\nflow.set('count',count);\n\n// Update the message payload and return - no need to create a new msg\nmsg.payload = \"Image \" + count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "f26c9f732e043006"
            ]
        ]
    },
    {
        "id": "de6776af4c548661",
        "type": "base64",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "17cc90f4fef90724"
            ]
        ]
    },
    {
        "id": "d603e881.2fa1c8",
        "type": "image",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": true,
        "active": true,
        "outputs": 0,
        "x": 760,
        "y": 100,
        "wires": []
    },
    {
        "id": "17cc90f4fef90724",
        "type": "image",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": true,
        "active": true,
        "outputs": 0,
        "x": 920,
        "y": 200,
        "wires": []
    },
    {
        "id": "acae4788.db10e8",
        "type": "http request",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": false,
        "url": "https://dummyimage.com/200x150/000/fff&text={{{payload}}}.jpg",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 520,
        "wires": [
            [
                "b548876a.e2f8b8"
            ]
        ]
    },
    {
        "id": "8ff5f74b.d2efb8",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "HideImage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 520,
        "wires": [
            [
                "ea222193.08df9"
            ]
        ]
    },
    {
        "id": "ea222193.08df9",
        "type": "function",
        "z": "d7baa1bd346d78d0",
        "name": "image counter",
        "func": "var count = flow.get(\"count\")||0;\n\ncount++;\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Image \" + count});\n\n// Save the new value back to context so it will be available next time\nflow.set('count',count);\n\n// Update the message payload and return - no need to create a new msg\nmsg.payload = \"Image \" + count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "acae4788.db10e8"
            ]
        ]
    },
    {
        "id": "670b37d4.e67658",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Msg without payload",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 510,
        "y": 420,
        "wires": [
            [
                "6d9c5aa.2d5e6a4"
            ]
        ]
    },
    {
        "id": "b548876a.e2f8b8",
        "type": "base64",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 760,
        "y": 520,
        "wires": [
            [
                "f8d56b3b.3bb1f8"
            ]
        ]
    },
    {
        "id": "6d9c5aa.2d5e6a4",
        "type": "change",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 420,
        "wires": [
            [
                "f8d56b3b.3bb1f8"
            ]
        ]
    },
    {
        "id": "636d9da2.959fb4",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Msg with empty string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 500,
        "y": 460,
        "wires": [
            [
                "6dce2d91.6158f4"
            ]
        ]
    },
    {
        "id": "c6c47147.1972a",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Msg with null value",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 510,
        "y": 380,
        "wires": [
            [
                "d21096f2.632ed8"
            ]
        ]
    },
    {
        "id": "6dce2d91.6158f4",
        "type": "change",
        "z": "d7baa1bd346d78d0",
        "name": "msg.payload = \"\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 460,
        "wires": [
            [
                "f8d56b3b.3bb1f8"
            ]
        ]
    },
    {
        "id": "d21096f2.632ed8",
        "type": "function",
        "z": "d7baa1bd346d78d0",
        "name": "msg.payload = null",
        "func": "msg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "f8d56b3b.3bb1f8"
            ]
        ]
    },
    {
        "id": "b99d140c.ce4448",
        "type": "comment",
        "z": "d7baa1bd346d78d0",
        "name": "Multiple ways to hide the preview image:",
        "info": "",
        "x": 560,
        "y": 340,
        "wires": []
    },
    {
        "id": "f8d56b3b.3bb1f8",
        "type": "image",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "outputs": 0,
        "x": 960,
        "y": 520,
        "wires": []
    },
    {
        "id": "bcbc1662d375b6b3",
        "type": "http request",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": false,
        "url": "https://dummyimage.com/200x150/000/fff&text={{{payload}}}.jpg",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 630,
        "y": 800,
        "wires": [
            [
                "47cd870a5eee7456"
            ]
        ]
    },
    {
        "id": "0c5f75f8cedb9017",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "JIMP image preview",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 800,
        "wires": [
            [
                "6d00fd5cf8ab6bfd"
            ]
        ]
    },
    {
        "id": "6d00fd5cf8ab6bfd",
        "type": "function",
        "z": "d7baa1bd346d78d0",
        "name": "image counter",
        "func": "var count = flow.get(\"count\")||0;\n\ncount++;\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Image \" + count});\n\n// Save the new value back to context so it will be available next time\nflow.set('count',count);\n\n// Update the message payload and return - no need to create a new msg\nmsg.payload = \"Image \" + count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 800,
        "wires": [
            [
                "bcbc1662d375b6b3"
            ]
        ]
    },
    {
        "id": "93efcd3e9b832ef6",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Msg without payload",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 530,
        "y": 700,
        "wires": [
            [
                "5c27d01044ce32e1"
            ]
        ]
    },
    {
        "id": "47cd870a5eee7456",
        "type": "base64",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 780,
        "y": 800,
        "wires": [
            [
                "3a25e24de74df20b"
            ]
        ]
    },
    {
        "id": "5c27d01044ce32e1",
        "type": "change",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 700,
        "wires": [
            [
                "3a25e24de74df20b"
            ]
        ]
    },
    {
        "id": "4693ff4b6974f10f",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Msg with empty string",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 520,
        "y": 740,
        "wires": [
            [
                "0166304e74e018ef"
            ]
        ]
    },
    {
        "id": "32d321605244fc89",
        "type": "inject",
        "z": "d7baa1bd346d78d0",
        "name": "Msg with null value",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "f3e6a785590e41e4"
            ]
        ]
    },
    {
        "id": "0166304e74e018ef",
        "type": "change",
        "z": "d7baa1bd346d78d0",
        "name": "msg.payload = \"\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 740,
        "wires": [
            [
                "3a25e24de74df20b"
            ]
        ]
    },
    {
        "id": "f3e6a785590e41e4",
        "type": "function",
        "z": "d7baa1bd346d78d0",
        "name": "msg.payload = null",
        "func": "msg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 660,
        "wires": [
            [
                "3a25e24de74df20b"
            ]
        ]
    },
    {
        "id": "0319c0048627f29e",
        "type": "comment",
        "z": "d7baa1bd346d78d0",
        "name": "Multiple ways to hide the preview image:",
        "info": "",
        "x": 580,
        "y": 620,
        "wires": []
    },
    {
        "id": "3a25e24de74df20b",
        "type": "image",
        "z": "d7baa1bd346d78d0",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "outputs": 0,
        "x": 980,
        "y": 800,
        "wires": []
    },
    {
        "id": "877abdbd.80d6e",
        "type": "comment",
        "z": "ef560dfa9aa5a337",
        "name": "Use an API to disply a motivational quote to the motivation tab",
        "info": "",
        "x": 300,
        "y": 80,
        "wires": []
    },
    {
        "id": "f04fd779.cea4c8",
        "type": "inject",
        "z": "ef560dfa9aa5a337",
        "name": "At 11:00am",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 11 * * *",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "b031a18e.59b03"
            ]
        ]
    },
    {
        "id": "b031a18e.59b03",
        "type": "http request",
        "z": "ef560dfa9aa5a337",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://type.fit/api/quotes",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "e6a4d14d.ce6a8"
            ]
        ]
    },
    {
        "id": "e6a4d14d.ce6a8",
        "type": "function",
        "z": "ef560dfa9aa5a337",
        "name": "",
        "func": "msg.payload = msg.payload[getRndInteger(0,1642)];\nreturn msg;\n\n// this code gets a random interger\nfunction getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 120,
        "wires": [
            [
                "94bfd95f.2c89a8",
                "88378938.731448",
                "9c32d9e13266b55e"
            ]
        ]
    },
    {
        "id": "94bfd95f.2c89a8",
        "type": "ui_text",
        "z": "ef560dfa9aa5a337",
        "group": "cbe50c39.f38f1",
        "order": 1,
        "width": 6,
        "height": 3,
        "name": "Daily Quote from https://type.fit/api/quotes",
        "label": "text",
        "format": "{{msg.payload.text}}",
        "layout": "col-center",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "88378938.731448",
        "type": "change",
        "z": "ef560dfa9aa5a337",
        "name": "set",
        "rules": [
            {
                "t": "delete",
                "p": "_msgid",
                "pt": "msg"
            },
            {
                "t": "move",
                "p": "payload.text",
                "pt": "msg",
                "to": "payload.content",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.author",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "statusCode",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "responseUrl",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "redirectList",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "responseCookies",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.chatId",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.type",
                "pt": "msg",
                "to": "message",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 80,
        "wires": [
            [
                "fdd86dc2.a28f2"
            ]
        ]
    },
    {
        "id": "fdd86dc2.a28f2",
        "type": "telegram sender",
        "z": "ef560dfa9aa5a337",
        "name": "",
        "bot": "662164b904dfacb5",
        "haserroroutput": false,
        "outputs": 1,
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9c32d9e13266b55e",
        "type": "debug",
        "z": "ef560dfa9aa5a337",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "d4feb199.b898b",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "CPU Temperature",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "60",
        "x": 683,
        "y": 33,
        "wires": []
    },
    {
        "id": "c0682e5c.a4fc",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "RPi Temp.",
        "x": 325.2221908569336,
        "y": 46.33333683013916,
        "wires": [
            [
                "95ae4c48.9f606"
            ],
            [],
            []
        ]
    },
    {
        "id": "2be04c82.d0af74",
        "type": "inject",
        "z": "9cf3a6d.1104258",
        "name": "",
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 107.49996185302734,
        "y": 46.805556297302246,
        "wires": [
            [
                "c0682e5c.a4fc",
                "92285ea6.f97a7",
                "c0ffe68.afd6e18"
            ]
        ]
    },
    {
        "id": "95ae4c48.9f606",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "name": "",
        "func": "str = msg.payload\nmsg.payload = str.substring(5,9);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 471.888858795166,
        "y": 33.00000190734863,
        "wires": [
            [
                "d4feb199.b898b",
                "4bae8072.e81c2"
            ]
        ]
    },
    {
        "id": "f4592b30.2f0528",
        "type": "ui_button",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 114.66669464111328,
        "y": 330.0000696182251,
        "wires": [
            [
                "cf3854e6.653878"
            ]
        ]
    },
    {
        "id": "cf3854e6.653878",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Reboot",
        "x": 314.888916015625,
        "y": 330.0000457763672,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4b4a0861.092b28",
        "type": "ui_button",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 104.27777099609375,
        "y": 386.47229862213135,
        "wires": [
            [
                "4de9dba1.ed7854"
            ]
        ]
    },
    {
        "id": "4de9dba1.ed7854",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "sudo shutdown -h now",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Shutdown",
        "x": 324.1666564941406,
        "y": 386.6944923400879,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4bae8072.e81c2",
        "type": "ui_chart",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 5,
        "width": "6",
        "height": "4",
        "label": "CPU Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 683.9999389648438,
        "y": 72.66667175292969,
        "wires": [
            []
        ]
    },
    {
        "id": "92285ea6.f97a7",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "top -d 0.5 -b -n2 | grep \"Cpu(s)\"|tail -n 1 | awk '{print $2 + $4}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Load",
        "x": 325.2221908569336,
        "y": 126.33333683013916,
        "wires": [
            [
                "404f06.1e77b0fc"
            ],
            [],
            []
        ]
    },
    {
        "id": "c0ffe68.afd6e18",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "free | grep Mem | awk '{print 100*($4+$6+$7)/$2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Free Memory",
        "x": 325.2222099304199,
        "y": 190.55557250976562,
        "wires": [
            [
                "8cf70ed5.e49ec"
            ],
            [],
            []
        ]
    },
    {
        "id": "404f06.1e77b0fc",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "CPU",
        "label": "CPU",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "8cf70ed5.e49ec",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Memory free",
        "label": "%",
        "format": "{{parseInt(value)}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 663.3333320617676,
        "y": 176.55556392669678,
        "wires": []
    },
    {
        "id": "a508a5b7.89a128",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "df -h",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Disk Usage",
        "x": 322.88884353637695,
        "y": 258.2222442626953,
        "wires": [
            [
                "a8dc2f34.5e32b"
            ],
            [],
            []
        ]
    },
    {
        "id": "ad4498e0.e7c278",
        "type": "ui_gauge",
        "z": "9cf3a6d.1104258",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Disk Space",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 661.1110496520996,
        "y": 244.88890743255615,
        "wires": []
    },
    {
        "id": "a8dc2f34.5e32b",
        "type": "function",
        "z": "9cf3a6d.1104258",
        "name": "",
        "func": "var re = /([0-9]{2})%/\nvar idx = msg.payload.search(re);\nvar str = msg.payload;\nif (idx >=0) {\n    str = msg.payload.substring(idx, idx + 2);\n}\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470.66661071777344,
        "y": 244.88890171051025,
        "wires": [
            [
                "ad4498e0.e7c278"
            ]
        ]
    },
    {
        "id": "5e6e69bb.0e1d38",
        "type": "inject",
        "z": "9cf3a6d.1104258",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 122.88884353637695,
        "y": 258.2222442626953,
        "wires": [
            [
                "a508a5b7.89a128"
            ]
        ]
    },
    {
        "id": "620c2ccf.7c7584",
        "type": "ui_text",
        "z": "9cf3a6d.1104258",
        "group": "dd70abe0.14cb38",
        "order": 2,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "IP Address",
        "format": "{{value.substring(0, value.indexOf(\" \"))}}",
        "layout": "col-center",
        "x": 661.555591583252,
        "y": 430.8889102935791,
        "wires": []
    },
    {
        "id": "19fadb42.3d0c25",
        "type": "inject",
        "z": "9cf3a6d.1104258",
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 118.90821075439453,
        "y": 445.567081451416,
        "wires": [
            [
                "9cce8e0f.766f7"
            ]
        ]
    },
    {
        "id": "9cce8e0f.766f7",
        "type": "exec",
        "z": "9cf3a6d.1104258",
        "command": "hostname",
        "addpay": false,
        "append": "-I",
        "useSpawn": "",
        "timer": "",
        "name": "Get Local IP",
        "x": 323.4637641906738,
        "y": 446.06709480285645,
        "wires": [
            [
                "b1e5e669.f1fd48",
                "620c2ccf.7c7584"
            ],
            [],
            []
        ]
    },
    {
        "id": "b1e5e669.f1fd48",
        "type": "mqtt out",
        "z": "9cf3a6d.1104258",
        "name": "Send IP thru MQTT",
        "topic": "raspberrypi3_ip_gama",
        "qos": "0",
        "retain": "true",
        "broker": "14bc5267.4d798e",
        "x": 680.6859703063965,
        "y": 380.34489250183105,
        "wires": []
    },
    {
        "id": "9d8decfc975f40d3",
        "type": "ui_gauge",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 1,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "CPU Temperature",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "60",
        "x": 683,
        "y": 33,
        "wires": []
    },
    {
        "id": "dec2f42ccd879ada",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "RPi Temp.",
        "x": 325.2221908569336,
        "y": 46.33333683013916,
        "wires": [
            [
                "f66cabe687b4a773"
            ],
            [],
            []
        ]
    },
    {
        "id": "702dae7d167bd43d",
        "type": "inject",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 107.49996185302734,
        "y": 46.805556297302246,
        "wires": [
            [
                "dec2f42ccd879ada",
                "9ab9eef39415453f",
                "b4277c2083770fb8"
            ]
        ]
    },
    {
        "id": "f66cabe687b4a773",
        "type": "function",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "func": "str = msg.payload\nmsg.payload = str.substring(5,9);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 471.888858795166,
        "y": 33.00000190734863,
        "wires": [
            [
                "9d8decfc975f40d3",
                "bb0d2b49dc02f74f"
            ]
        ]
    },
    {
        "id": "fc43b67c67e6ca84",
        "type": "ui_button",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 114.66669464111328,
        "y": 330.0000696182251,
        "wires": [
            [
                "b006f5d3001a9d5a"
            ]
        ]
    },
    {
        "id": "b006f5d3001a9d5a",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Reboot",
        "x": 314.888916015625,
        "y": 330.0000457763672,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e881d5fdd5a7287b",
        "type": "ui_button",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 104.27777099609375,
        "y": 386.47229862213135,
        "wires": [
            [
                "42ee785c50cef492"
            ]
        ]
    },
    {
        "id": "42ee785c50cef492",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "sudo shutdown -h now",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Shutdown",
        "x": 324.1666564941406,
        "y": 386.6944923400879,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bb0d2b49dc02f74f",
        "type": "ui_chart",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 5,
        "width": "6",
        "height": "4",
        "label": "CPU Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 683.9999389648438,
        "y": 72.66667175292969,
        "wires": [
            []
        ]
    },
    {
        "id": "9ab9eef39415453f",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "top -d 0.5 -b -n2 | grep \"Cpu(s)\"|tail -n 1 | awk '{print $2 + $4}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Load",
        "x": 325.2221908569336,
        "y": 126.33333683013916,
        "wires": [
            [
                "fff8c9af4019d147"
            ],
            [],
            []
        ]
    },
    {
        "id": "b4277c2083770fb8",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "free | grep Mem | awk '{print 100*($4+$6+$7)/$2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Free Memory",
        "x": 325.2222099304199,
        "y": 190.55557250976562,
        "wires": [
            [
                "0d8c7f3d4ba800ad"
            ],
            [],
            []
        ]
    },
    {
        "id": "fff8c9af4019d147",
        "type": "ui_gauge",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "CPU",
        "label": "CPU",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 645.111083984375,
        "y": 114.11111450195312,
        "wires": []
    },
    {
        "id": "0d8c7f3d4ba800ad",
        "type": "ui_gauge",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Memory free",
        "label": "%",
        "format": "{{parseInt(value)}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 663.3333320617676,
        "y": 176.55556392669678,
        "wires": []
    },
    {
        "id": "ef618325442d4dec",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "df -h",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Disk Usage",
        "x": 322.88884353637695,
        "y": 258.2222442626953,
        "wires": [
            [
                "0a5614a7e1757b2d"
            ],
            [],
            []
        ]
    },
    {
        "id": "1877d515f2de5677",
        "type": "ui_gauge",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Disk Space",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 661.1110496520996,
        "y": 244.88890743255615,
        "wires": []
    },
    {
        "id": "0a5614a7e1757b2d",
        "type": "function",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "func": "var re = /([0-9]{2})%/\nvar idx = msg.payload.search(re);\nvar str = msg.payload;\nif (idx >=0) {\n    str = msg.payload.substring(idx, idx + 2);\n}\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470.66661071777344,
        "y": 244.88890171051025,
        "wires": [
            [
                "1877d515f2de5677"
            ]
        ]
    },
    {
        "id": "76414d795f31f08d",
        "type": "inject",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 122.88884353637695,
        "y": 258.2222442626953,
        "wires": [
            [
                "ef618325442d4dec"
            ]
        ]
    },
    {
        "id": "db6930dd87364bf0",
        "type": "ui_text",
        "z": "9eb1d4a0df15e20d",
        "group": "dd70abe0.14cb38",
        "order": 2,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "IP Address",
        "format": "{{value.substring(0, value.indexOf(\" \"))}}",
        "layout": "col-center",
        "x": 661.555591583252,
        "y": 430.8889102935791,
        "wires": []
    },
    {
        "id": "cc43fc3102a7bfa3",
        "type": "inject",
        "z": "9eb1d4a0df15e20d",
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 118.90821075439453,
        "y": 445.567081451416,
        "wires": [
            [
                "81b45daa0523c462"
            ]
        ]
    },
    {
        "id": "81b45daa0523c462",
        "type": "exec",
        "z": "9eb1d4a0df15e20d",
        "command": "hostname",
        "addpay": false,
        "append": "-I",
        "useSpawn": "",
        "timer": "",
        "name": "Get Local IP",
        "x": 323.4637641906738,
        "y": 446.06709480285645,
        "wires": [
            [
                "2e21d2639001bdad",
                "db6930dd87364bf0"
            ],
            [],
            []
        ]
    },
    {
        "id": "2e21d2639001bdad",
        "type": "mqtt out",
        "z": "9eb1d4a0df15e20d",
        "name": "Send IP thru MQTT",
        "topic": "raspberrypi3_ip_gama",
        "qos": "0",
        "retain": "true",
        "broker": "14bc5267.4d798e",
        "x": 680.6859703063965,
        "y": 380.34489250183105,
        "wires": []
    }
]
